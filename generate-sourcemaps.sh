#!/bin/bash

# Script to generate source maps for WASM files for Sentry
# This is an alternative approach using wasm-bindgen's source map generation

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}=== Generating Source Maps for Sentry ===${NC}"

# Check if we have the debug WASM
if [ ! -f "target/site/debug/*.debug.wasm" ] && [ ! -f "target/site/pkg/*.wasm" ]; then
    echo -e "${RED}Error: No WASM files found. Run 'cargo leptos build --wasm-debug' first${NC}"
    exit 1
fi

# The proper way to get source maps for Sentry is to:
# 1. Build with source maps enabled in wasm-bindgen
# 2. Upload the .wasm and .wasm.map files together

echo -e "\n${YELLOW}Important Notes for Sentry WASM Debugging:${NC}"
echo "1. WASM debugging in Sentry works best with source maps, not DWARF debug info"
echo "2. Source maps are generated by wasm-bindgen during the build process"
echo "3. To enable source maps, you need to build with specific flags"

echo -e "\n${YELLOW}Recommended Build Configuration:${NC}"
cat << 'EOF'

Add to your Cargo.toml:

[package.metadata.wasm-bindgen]
debug-js-glue = true
demangle-name-section = true
dwarf-debug-info = false

Or build with environment variable:
WASM_BINDGEN_DEBUG=1 cargo leptos build --release

This will generate:
- .wasm file (the binary)
- .wasm.map file (source map for debugging)

EOF

echo -e "\n${YELLOW}For Sentry Integration:${NC}"
echo "1. Upload both .wasm and .wasm.map files to Sentry"
echo "2. Ensure your application serves the .wasm.map files"
echo "3. Configure Sentry SDK in your app with proper release tracking"

echo -e "\n${YELLOW}Checking current WASM files for source maps...${NC}"
for wasm_file in target/site/pkg/*.wasm; do
    if [ -f "$wasm_file" ]; then
        filename=$(basename "$wasm_file")
        echo -e "\nChecking $filename:"
        
        # Check if source map exists
        if [ -f "$wasm_file.map" ]; then
            echo -e "  ${GREEN}✓ Source map found: ${filename}.map${NC}"
            echo "  Size: $(ls -lh "$wasm_file.map" | awk '{print $5}')"
        else
            echo -e "  ${YELLOW}✗ No source map found${NC}"
            echo "  To generate: rebuild with WASM_BINDGEN_DEBUG=1"
        fi
        
        # Check for inline source map
        if strings "$wasm_file" 2>/dev/null | grep -q "sourceMappingURL"; then
            echo -e "  ${GREEN}✓ Has sourceMappingURL reference${NC}"
        else
            echo -e "  ${YELLOW}✗ No sourceMappingURL reference${NC}"
        fi
    fi
done

echo -e "\n${GREEN}=== Check Complete ===${NC}"
echo -e "\n${YELLOW}Next Steps:${NC}"
echo "1. Rebuild with: WASM_BINDGEN_DEBUG=1 cargo leptos build --release"
echo "2. Upload files to Sentry using sentry-cli"
echo "3. Ensure your web server serves .wasm.map files with correct MIME type"