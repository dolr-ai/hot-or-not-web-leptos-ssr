name: Build and Check linting for preview release

on:
  workflow_call:
    inputs:
      publish-artifact:
        default: false
        type: boolean
      erase_components:
        default: false
        type: boolean
      mode:
        default: full
        type: string
      skip-musl-build:
        default: false
        type: boolean

jobs:
  build_check:
    runs-on: warp-ubuntu-latest-x64-32x

    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Rust Setup
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "nightly-2025-06-15"
          targets: "x86_64-unknown-linux-musl${{ inputs.mode == 'full' && ',wasm32-unknown-unknown' || '' }}"
          components: "clippy,rustfmt"
          override: true

      - uses: cargo-bins/cargo-binstall@main
      - run: cargo binstall --no-confirm cargo-leptos --version 0.2.40 --locked

      - name: Install Node.js
        if: ${{ inputs.mode == 'full' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        if: ${{ inputs.mode == 'full' }}
        with:
          version: 8
          run_install: false

      # Cache pnpm store for instant installs
      - name: Cache pnpm store
        if: ${{ inputs.mode == 'full' }}
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-

      - name: Install npm deps
        if: ${{ inputs.mode == 'full' }}
        run: pnpm install --frozen-lockfile

      - name: lint check
        if: ${{ inputs.mode == 'full' }}
        run: |
          cargo fmt --check
          cargo clippy --no-deps --all-features --release -- -D warnings
        env:
          RUSTUP_TOOLCHAIN: "nightly-2025-06-15"

      - name: Download MUSL artifact (if skipping musl build)
        if: ${{ inputs.skip-musl-build }}
        uses: actions/download-artifact@v4
        with:
          name: build-musl
          path: target/x86_64-unknown-linux-musl/prod-release

      - name: Build the Leptos project to `musl` output
        if: ${{ !inputs.skip-musl-build }}
        run: |
          RUSTFLAGS_VALUE=""
          if [[ "${{ inputs.erase_components }}" == "true" ]]; then
            RUSTFLAGS_VALUE="--cfg=erase_components"
          fi
          RUSTFLAGS="$RUSTFLAGS_VALUE" cargo leptos build --release --lib-features release-lib --bin-features release-bin
        env:
          RUSTUP_TOOLCHAIN: "nightly-2025-06-15"
          LEPTOS_BIN_TARGET_TRIPLE: x86_64-unknown-linux-musl
          LEPTOS_HASH_FILES: true
          LEPTOS_TAILWIND_VERSION: v4.1.7

      - name: Archive MUSL artifacts
        if: ${{ inputs.publish-artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: build-musl
          path: |
            target/x86_64-unknown-linux-musl/prod-release/hot-or-not-web-leptos-ssr
            target/x86_64-unknown-linux-musl/prod-release/hash.txt
            target/site
