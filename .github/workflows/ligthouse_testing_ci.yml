name: Generate lighthouse test report on PR
on:
    pull_request:
        branches: [ main, lighthouse_testing_pipeline ]
        
jobs:
    lhci:
        runs-on: ubuntu-latest
        env: 
            COOKIE_KEY: '1267b291500365c42043e04bc69cf24a31495bd8936fc8d6794283675e288fad755971922d45cf1ca0b438df4fc847f39cb0b2aceb3a45673eff231cddb88dc9'

        steps:
          - name: Checkout repo
            uses: actions/checkout@v3

          - name: Install Node.js
            uses: actions/setup-node@v4
            with: 
                node-version: 20
          - run: npm install

          # - name: Install Lighthouse
          #   run: npm install -g @lhci/cli@0.13.x

          # - name: Run Lighthouse
          #   run: lhci autorun --upload.githubToken="$LHCI_GITHUB_TOKEN" || echo "LHCI failed!"
          #   env: 
          #       LHCI_GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

          - name: install playwright
            run: npx playwright install    

          - name: run playwright
            id: tests
            run: npx playwright test --project=firefox
            continue-on-error: true

          # - name: Notify Google Chat on success
          #   if: success()
          #   uses: Co-qn/google-chat-notification@releases/v1
          #   with:
          #     webhook_url: '${{ secrets.TEST_WEBHOOK_URL }}'
          #     # mention: "<users/all>"
          #     message: 'Playwright Tests Passed! !!!!!'

          - name: Notify Google Chat on failure
            # if: failure()
            uses: 'google-github-actions/send-google-chat-webhook@v0.0.2'
            with:
              webhook_url: '${{ secrets.TEST_WEBHOOK_URL }}'
              message: 'Playwright Tests Failed! '

          - name: Check test result and comment
            uses: peter-evans/create-or-update-comment@v1
            with:
              token: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
              issue-number: ${{ github.event.pull_request.number }}
              body: |
                ${{ steps.tests.outcome == '1 failed' && 'Test passed :heavy_check_mark:' || 'Test failed, Please check logs for details.' }}
